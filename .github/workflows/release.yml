name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release type'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Bump version
        id: bumpVersion
        run: |
          curl -o bump.sh https://raw.githubusercontent.com/tomologic/bump-semver/master/bump.sh
          VERSION=$(bash bump.sh -p v $TYPE | cut -d ' ' -f 2)
          echo "::set-output name=newVersion::$VERSION"
          git tag -d $VERSION
        env:
          TYPE: ${{ github.event.inputs.releaseType }}
      - name: Set version
        run: echo "- \fancyfoot[L]{$VERSION}" >> metadata.yml
        env:
          VERSION: ${{ steps.bumpVersion.outputs.newVersion }}
      - name: Install pandoc
        run: |
          sudo apt-get install \
            texlive-latex-base \
            texlive-fonts-recommended \
            texlive-fonts-extra \
            texlive-latex-extra
          brew install \
            pandoc \
            pandoc-crossref \
            librsvg
      - name: Test pandoc
        run: pandoc --version
      - name: Compile PDF
        run: make
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: tea.white-paper
          path: |
            tea.white-paper.pdf
            tea.white-paper_??.pdf
      - name: Tag release
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.bumpVersion.outputs.newVersion }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bumpVersion.outputs.newVersion }}
          files: tea.white-paper.pdf
      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload to S3
        run: |
          aws s3 cp \
            ./tea.white-paper.pdf s3://www.tea.xyz/tea.white-paper.pdf \
            --metadata-directive REPLACE \
            --cache-control no-cache,must-revalidate
      - name: Invalidate cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.AWS_CF_DISTRIBUTION_ID }} \
            --paths / /tea.white-paper.pdf
      - name: Upload to slack
        uses: MeilCli/slack-upload-file@v1
        id: message
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channels: ${{ secrets.SLACK_CHANNELS }}
          file_path: 'tea.white-paper.pdf'
          file_name: 'tea.white-paper.pdf'
          file_type: 'pdf'
